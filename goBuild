#!/usr/bin/env bash

# Function to show an informational message
msg() {
    echo -e "\e[1;32m$*\e[0m"
}

err() {
    echo -e "\e[1;41m$*\e[0m"
}

# Clone source
git clone https://github.com/ClangBuiltLinux/tc-build clang
cd clang

# Install dependency
bash ci.sh deps

# Set a directory
DIR="$(pwd ...)"

# Build LLVM
msg "Building LLVM..."
./build-llvm.py \
	--clang-vendor "WeebX" \
	--projects "clang;lld;polly" \
	--targets "ARM;AArch64;X86" \
	--use-good-revision \
	--incremental \
	--no-ccache \
	--build-type "Release" 2>&1 | tee build.log

# Check if the final clang binary exists or not.
[ ! -f install/bin/clang-1* ] && {
	err "Building LLVM failed ! Kindly check errors !!"
	exit 1
}

# Build binutils
msg "Building binutils..."
./build-binutils.py --targets arm aarch64 x86_64

# Remove unused products
rm -fr install/include
rm -f install/lib/*.a install/lib/*.la

# Strip remaining products
for f in $(find install -type f -exec file {} \; | grep 'not stripped' | awk '{print $1}'); do
	strip -s "${f: : -1}"
done

# Set executable rpaths so setting LD_LIBRARY_PATH isn't necessary
for bin in $(find install -mindepth 2 -maxdepth 3 -type f -exec file {} \; | grep 'ELF .* interpreter' | awk '{print $1}'); do
	# Remove last character from file output (':')
	bin="${bin: : -1}"

	echo "$bin"
	patchelf --set-rpath "$DIR/../lib" "$bin"
done

# Update Git config
git config --global user.name "XSans"
git config --global user.email "xsans966@gmail.com"

# Clone clang repo
git clone "https://XSans:$GIT_TOKEN@gitlab.com/XSans02/weebx-clang.git" rel_repo
rm -rf rel_repo/*
mv install/* rel_repo/

# Create Commit
cd rel_repo
git add -A
git commit -asm "Clang: $(date) Build"
git push -f